# Configure Rails Environment
ENV["RAILS_ENV"] ||= 'test'

if ENV['COVERAGE']
  require 'simplecov'
  SimpleCov.start 'rails'
  SimpleCov.command_name "spec"
end

require File.expand_path("../internal/config/environment.rb",  __FILE__)

require File.expand_path('../spec_patch', __FILE__)
require 'curate/spec_support'

# This is hear because it cannot be part of spec_support as other
# Curate based apps would very likely register a :user
FactoryGirl.define do
  factory :user do
    sequence(:email) {|n| "email-#{srand}@test.com" }
    agreed_to_terms_of_service true
    user_does_not_require_profile_update true
    password 'a password'
    password_confirmation 'a password'
    sign_in_count 20
  end
end

Rails.backtrace_cleaner.remove_silencers!

# This file was generated by the `rspec --init` command. Conventionally, all
# specs live under a `spec` directory, which RSpec adds to the `$LOAD_PATH`.
# Require this file using `require "spec_helper"` to ensure that it is only
# loaded once.
#
# See http://rubydoc.info/gems/rspec-core/RSpec/Core/Configuration
RSpec.configure do |config|
  config.treat_symbols_as_metadata_keys_with_true_values = true
  config.run_all_when_everything_filtered = true
  config.fixture_path = File.expand_path("../fixtures", __FILE__)
  

  # Run specs in random order to surface order dependencies. If you find an
  # order dependency and want to debug it, you can fix the order by providing
  # the seed, which is printed after each run.
  #     --seed 1234
  config.order = 'random'

  config.include Devise::TestHelpers, type: :controller
  config.include InputSupport, type: :input, example_group: {
    file_path: config.escaped_path(%w[spec inputs])
  }

  config.use_transactional_fixtures = true

end
